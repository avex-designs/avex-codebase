(()=>{const t="data-product-radio-option-name",e="data-product-radio-option-availability",o="undefined",i="available",n="not-available",a="does-not-exist";class s extends HTMLElement{#t;#e;constructor(){super()}connectedCallback(){if(this.#e=this.getAttribute(t),void 0===this.#e||""===this.#e)throw new Error("Product option name is not set");if(this.#t=this.closest("product-section"),!this.#t)throw new Error("A related product-section element is not found");this.#t.addEventListener("statechange",(()=>{this.#o()})),this.#t.state&&this.#o(),this.#i()}#i(){this.querySelectorAll("input[type='radio']").forEach((t=>{t.addEventListener("change",(t=>{this.#t.state&&this.#t.setOptions({[this.#e]:t.currentTarget.value})}))}))}#o(){const t=this.#t.state,s=t.optionsValues.find((t=>t.name===this.#e)),r=t.optionsAvailability[this.#e];if(s){const t=s.value;this.querySelectorAll("input[type='radio']").forEach((s=>{s.value===t?s.checked=!0:s.checked=!1;let c=o;r&&(c=s.value in r?r[s.value]?i:n:a),s.setAttribute(e,c)}))}}}customElements.define("product-radio-option",s)})();