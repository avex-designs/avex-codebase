/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/scripts/base-components/product-option.js":
/*!*******************************************************!*\
  !*** ./src/scripts/base-components/product-option.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ProductOption: () => (/* binding */ ProductOption)
/* harmony export */ });
class ProductOption extends HTMLElement {
  _elementName;
  _valueLabelPlaceholder = "[[value]]";
  _availabilityStatuses = {
    undefined: "undefined",
    available: "available",
    not_available: "not-available",
    does_not_exist: "does-not-exist",
  };
  _classPrefix = "js-product-option-";

  dataAttributes = {};
  optionName;
  $productSection;

  constructor(elementName) {
    super();
    this._elementName = elementName;
    this.dataAttributes = {
      name: `data-${elementName}-name`,
      valueLabel: `data-${elementName}-value`,
      classPrefix: `data-${elementName}-class-prefix`,
    };
  }

  connectedCallbackStart() {
    this.optionName = this.getAttribute(this.dataAttributes.name);
    if (this.optionName === undefined || this.optionName === "")
      throw new Error(
        `[${this._elementName}] [Product option name is not set]`
      );

    this.$productSection = this.closest("product-section");
    if (!this.$productSection)
      throw new Error(
        `[${this._elementName}] [A related product-section element is not found]`
      );

    this._classPrefix =
      this.getAttribute(this.dataAttributes.classPrefix) || this._classPrefix;
  }

  connectedCallbackEnd() {
    this.$productSection.addEventListener("statechange", () => {
      this.render();
    });
    if (this.$productSection.state) this.render();
  }

  getOptionState() {
    return this.$productSection.state.optionsValues.find(
      (option) => option.name === this.optionName
    );
  }

  _getValueAvailability(value) {
    const availability =
      this.$productSection.state.optionsAvailability[this.optionName];
    let status = this._availabilityStatuses.undefined;
    if (availability) {
      if (!(value in availability))
        status = this._availabilityStatuses.does_not_exist;
      else if (availability[value])
        status = this._availabilityStatuses.available;
      else status = this._availabilityStatuses.not_available;
    }
    return status;
  }

  addAvailabilityClass($element, value) {
    $element.classList.remove(
      ...Object.values(this._availabilityStatuses).map(
        (status) => this._classPrefix + status
      )
    );
    $element.classList.add(
      this._classPrefix + this._getValueAvailability(value)
    );
  }

  render() {
    const option = this.getOptionState();
    if (option) {
      const value = option.value;
      this.querySelectorAll(`[${this.dataAttributes.valueLabel}]`).forEach(
        ($element) => {
          if (!value) {
            $element.innerHTML = "";
            return;
          }
          const template =
            $element.getAttribute(this.dataAttributes.valueLabel) ||
            this._valueLabelPlaceholder;
          $element.innerHTML = template.replaceAll(
            this._valueLabelPlaceholder,
            value
          );
        }
      );
    }
  }
}


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!*********************************************************!*\
  !*** ./src/scripts/components/product-select-option.js ***!
  \*********************************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _base_components_product_option__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base-components/product-option */ "./src/scripts/base-components/product-option.js");


const ELEMENT_NAME = "product-select-option";

class ProductSelectOption extends _base_components_product_option__WEBPACK_IMPORTED_MODULE_0__.ProductOption {
  #$select;
  constructor() {
    super(ELEMENT_NAME);
  }

  connectedCallback() {
    super.connectedCallbackStart();

    this.#$select = this.querySelector("select");
    if (!this.#$select)
      throw new Error(`[${ELEMENT_NAME}] [A select element if not found]`);

    super.connectedCallbackEnd();
    this.#internalEvents();
  }

  #internalEvents() {
    this.#$select.addEventListener("change", (e) => {
      if (this.$productSection.state) {
        this.$productSection.setOptions({
          [this.optionName]: e.currentTarget.value,
        });
      }
    });
  }

  render() {
    super.render();

    const option = this.getOptionState();
    if (option) {
      this.#$select.value = option.value || "";
      this.#$select.querySelectorAll("option").forEach(($element) => {
        this.addAvailabilityClass($element, $element.value);
      });
    }
  }
}
customElements.define(ELEMENT_NAME, ProductSelectOption);

})();

/******/ })()
;