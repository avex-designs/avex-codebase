(()=>{"use strict";const t=(t,e,i)=>{t.querySelectorAll(`[${e}]`).forEach((t=>{const a=t.getAttribute(e);a&&(i?t.classList.add(a):t.classList.remove(a))}))};class e extends HTMLElement{#t;#e="[[value]]";#i={undefined:"undefined",available:"available",not_available:"not-available",does_not_exist:"does-not-exist"};#a="js-product-option-";dataAttributes={};optionName;$productSection;constructor(t){super(),this.#t=t,this.dataAttributes={name:`data-${t}-name`,valueLabel:`data-${t}-value`,classPrefix:`data-${t}-class-prefix`}}connectedCallbackStart(){if(this.optionName=this.getAttribute(this.dataAttributes.name),void 0===this.optionName||""===this.optionName)throw new Error(`[${this.#t}] [Product option name is not set]`);if(this.$productSection=this.closest("product-section"),!this.$productSection)throw new Error(`[${this.#t}] [A related product-section element is not found]`);this.#a=this.getAttribute(this.dataAttributes.classPrefix)||this.#a}connectedCallbackEnd(){this.$productSection.addEventListener("statechange",(()=>{this.render()})),this.$productSection.state&&this.render()}getOptionState(){return this.$productSection.state.optionsValues.find((t=>t.name===this.optionName))}#s(t){const e=this.$productSection.state.optionsAvailability[this.optionName];let i=this.#i.undefined;return e&&(t in e?e[t]?this.#i.available:this.#i.not_available:this.#i.does_not_exist),i}addAvailabilityClass(t,e){t.classList.remove(...Object.values(this.#i).map((t=>this.#a+t))),t.classList.add(this.#a+this.#s(e))}render(){const t=this.getOptionState();if(t){const e=t.value;this.querySelectorAll(`[${this.dataAttributes.valueLabel}]`).forEach((t=>{if(!e)return void(t.innerHTML="");const i=t.getAttribute(this.dataAttributes.valueLabel)||this.#e;t.innerHTML=i.replaceAll(this.#e,e)}))}}}const i="infinite-paginate",a="load-more",s="load-prev",n={content:`data-${i}-content`,container:`data-${i}-container`,loadingClass:`data-${i}-loading-class`,loadingPrevClass:`data-${i}-loading-prev-class`,loadingMoreClass:`data-${i}-loading-more-class`,link:`data-${i}-link`};class o extends HTMLElement{#n=!1;connectedCallback(){this.#o()}#o(){const t=`[${n.container}="${a}"] [${n.link}]`,e=`[${n.container}="${s}"] [${n.link}]`;this.querySelectorAll(`${e}, ${t}`).forEach((t=>{const e=t.closest(`[${n.container}`).getAttribute(n.container);t.addEventListener("click",(i=>{i.preventDefault(),this.#r(t.href,e)}))}))}#r(t,e){if(this.#n)return;const s=new URL(t,window.location.origin),[n]=(t=>{const e="shopify-section-",i=t.closest(`[id^="${e}"]`);return i?[i.id.replace(e,""),i]:[null,null]})(this);if(!n)throw new Error(`[${i}] [The component must be within a Shopify section]`);e===a&&window.history.pushState(Object.fromEntries(s.searchParams),"",s.href),s.search=s.search+`&section_id=${n}`,this.#n=!0,this.#l(this.#n,e),fetch(s).then((t=>t.text())).then((t=>{this.#c(t,e)})).finally((()=>{this.#n=!1,this.#l(this.#n,e)}))}#l(e,i){t(this,n.loadingClass,e),t(this,n.loadingPrevClass,e&&i===s),t(this,n.loadingMoreClass,e&&i===a)}#c(t,e){const o=(new DOMParser).parseFromString(t,"text/html");this.querySelectorAll(`[${n.container}]`).forEach((t=>{const r=t.getAttribute(n.container);if(!r)throw new Error(`[${i}] [A "${n.container}" element doesn't have an attribute value]`);const l=o.querySelector(`[${n.container}="${r}"]`);if(!l)throw new Error(`[${i}] [Corresponding element for [${n.container}="${r}"] isn't received in the AJAX response]`);(e===a&&r===a||e===s&&r===s)&&(t.innerHTML=l.innerHTML)}));const r=this.querySelector(`[${n.content}]`),l=o.querySelector(`[${n.content}]`);r&&l?r.insertAdjacentHTML(e===s?"afterbegin":"beforeend",l.innerHTML):console.warn(`[${i}] [The ${n.content} isn't found on the page or in the ajax response]`),this.#o()}}customElements.define(i,o)})();