/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/scripts/helpers.js":
/*!********************************!*\
  !*** ./src/scripts/helpers.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "findAncestor": () => (/* binding */ findAncestor),
/* harmony export */   "isInViewport": () => (/* binding */ isInViewport),
/* harmony export */   "serializeForm": () => (/* binding */ serializeForm),
/* harmony export */   "debounce": () => (/* binding */ debounce),
/* harmony export */   "parseTag": () => (/* binding */ parseTag),
/* harmony export */   "getCollectionUrl": () => (/* binding */ getCollectionUrl),
/* harmony export */   "swiperArrows": () => (/* binding */ swiperArrows)
/* harmony export */ });
function findAncestor(el, sel) {
  while (
    (el = el.parentElement) &&
    !(el.matches || el.matchesSelector).call(el, sel)
  );
  return el;
}

const isInViewport = (elem) => {
  const bounding = elem && elem.getBoundingClientRect();
  return bounding && bounding.top < window.innerHeight && bounding.bottom >= 0;
};

function serializeForm(form) {
  let obj = {};
  let formData = new FormData(form);

  for (let key of formData.keys()) {
    obj[key] = formData.get(key);
  }

  return obj;
}

function debounce(fn, wait) {
  let t;
  return (...args) => {
    clearTimeout(t);
    t = setTimeout(() => fn.apply(this, args), wait);
  };
}

function parseTag(url) {
  const regex = /[^/]+$/;
  return url.match(regex)[0];
}

function getCollectionUrl(url) {
  const regex = /\/\S+\//;
  return url.match(regex)[0];
}

function swiperArrows(_this, mobile_limit, desktop_limit) {
  if (
    _this.el.querySelector(".swiper-button-prev") &&
    _this.el.querySelector(".swiper-button-next")
  ) {
    if (
      window.matchMedia("(max-width: 767px)").matches &&
      _this.slides.length <= mobile_limit
    ) {
      _this.allowSlidePrev = _this.allowSlideNext = false;
      _this.el.querySelector(".swiper-button-prev").style.display = "none";
      _this.el.querySelector(".swiper-button-next").style.display = "none";
    } else if (
      window.matchMedia("(min-width: 768px)").matches &&
      _this.slides.length <= desktop_limit
    ) {
      _this.allowSlidePrev = _this.allowSlideNext = false;
      _this.el.querySelector(".swiper-button-prev").style.display = "none";
      _this.el.querySelector(".swiper-button-next").style.display = "none";
    } else {
      _this.allowSlidePrev = _this.allowSlideNext = true;
      _this.el.querySelector(".swiper-button-prev").style.display =
        "inline-flex";
      _this.el.querySelector(".swiper-button-next").style.display =
        "inline-flex";
    }
  }
}


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!********************************************************!*\
  !*** ./src/scripts/components/filter-and-sort-form.js ***!
  \********************************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers */ "./src/scripts/helpers.js");


class FilterAndSortForm extends HTMLElement {
  constructor() {
    super();
    this.resetActiveFilter = this.resetActiveFilter.bind(this);

    this.debouncedOnSubmit = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.debounce)((event) => {
      this.onSubmitHandler(event);
    }, 500);

    this.querySelector("form").addEventListener(
      "input",
      this.debouncedOnSubmit.bind(this)
    );
  }
  static setListeners() {
    const onHistoryChange = (event) => {
      const searchParams = event.state
        ? event.state.searchParams
        : FilterAndSortForm.searchParamsInitial;
      if (searchParams === FilterAndSortForm.searchParamsPrev) return;
      FilterAndSortForm.renderPage(searchParams, null, false);
    };
    window.addEventListener("popstate", onHistoryChange);
  }

  static updateURLHash(searchParams) {
    history.pushState(
      { searchParams },
      "",
      `${window.location.pathname}${searchParams && "?".concat(searchParams)}`
    );
  }

  static renderProductGridContainer(html) {
    document.getElementById("ProductsList").innerHTML = new DOMParser()
      .parseFromString(html, "text/html")
      .getElementById("ProductsList").innerHTML;
  }

  static renderFilters(html) {
    const parsedHTML = new DOMParser().parseFromString(html, "text/html");

    const filtersDetailsElements = parsedHTML.querySelectorAll(
      "#FiltersForm .js-filter"
    );
    filtersDetailsElements.forEach((element) => {
      document.querySelector(
        `.js-filter[data-index="${element.dataset.index}"]`
      ).innerHTML = element.innerHTML;
    });
  }

  static renderSectionFromFetch(url, event) {
    fetch(url)
      .then((response) => response.text())
      .then((responseText) => {
        const html = responseText;
        FilterAndSortForm.renderProductGridContainer(html);
        FilterAndSortForm.data = [...FilterAndSortForm.data, { html, url }];
        FilterAndSortForm.renderFilters(html, event);
        FilterAndSortForm.renderProductCount(html);
      });
  }

  static renderSectionFromCache(filterDataUrl, event) {
    const html = FilterAndSortForm.data.find(filterDataUrl).html;
    FilterAndSortForm.renderFilters(html, event);
    FilterAndSortForm.renderProductGridContainer(html);
    FilterAndSortForm.renderProductCount(html);
  }

  static renderProductCount(html) {
    const count = new DOMParser()
      .parseFromString(html, "text/html")
      .getElementById("ProductsCount").innerHTML;
    const container = document.getElementById("ProductsCount");
    container.innerHTML = count;
  }

  static renderPage(searchParams, event, updateURLHash = true) {
    FilterAndSortForm.searchParamsPrev = searchParams;
    const section = document.getElementById("ProductsList").dataset.id;
    document
      .getElementById("ProductsList")
      .querySelector("[data-products-list]")
      .classList.add("loading");
    const url = `${window.location.pathname}?section_id=${section}&${searchParams}`;
    const filterDataUrl = (element) => element.url === url;

    FilterAndSortForm.data.some(filterDataUrl)
      ? FilterAndSortForm.renderSectionFromCache(filterDataUrl, event)
      : FilterAndSortForm.renderSectionFromFetch(url, event);

    if (updateURLHash) FilterAndSortForm.updateURLHash(searchParams);
  }

  onSubmitHandler(event) {
    event.preventDefault();
    const formData = new FormData(event.target.closest("form"));
    const searchParams = new URLSearchParams(formData).toString();
    FilterAndSortForm.renderPage(searchParams, event);
  }

  resetActiveFilter(event) {
    event.preventDefault();
    FilterAndSortForm.renderPage(
      new URL(event.currentTarget.href).searchParams.toString()
    );
  }
}

FilterAndSortForm.data = [];
FilterAndSortForm.searchParamsInitial = window.location.search.slice(1);
FilterAndSortForm.searchParamsPrev = window.location.search.slice(1);
customElements.define("filter-and-sort-form", FilterAndSortForm);
FilterAndSortForm.setListeners();

})();

/******/ })()
;