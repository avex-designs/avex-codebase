(()=>{"use strict";const t="product-section",e={json:"data-product-section-json",area:"data-product-section-area",doesNotExistText:"data-product-section-doesnotexist",loadingClass:"data-product-section-loading-class",errorMessage:"data-product-section-error"},i="statechange";class s extends HTMLElement{#variantId;#data;#optionsValues=[];#optionsHierarchy=[];#optionsAvailability={};#$variantInputs;#$addToCartButtons;#isHydration=!1;#abortController;#latestHTML;constructor(){super()}connectedCallback(){this.addEventListener(i,this.#render.bind(this)),this.#latestHTML=`<div>${this.outerHTML}</div>`,this.#hydrate()}#hydrate(){this.#isHydration=!0;try{const t=this.querySelector(`[${e.json}]`);if(!t)throw new Error(`[product-section] [The mandatory ${e.json} element is not found]`);if(this.#data=JSON.parse(t.innerHTML),this.#optionsHierarchy=this.#data.product.options.map(((t,e)=>e)),!("requestURL"in this.#data.section)||!("sectionId"in this.#data.section))throw new Error(`[product-section] [Wrong ${e.json} data structure]`);this.#$variantInputs=this.querySelectorAll("input[name='id']"),this.#$addToCartButtons=this.querySelectorAll("[name='add']"),this.setVariantId(this.#data.section.variantId||0)}catch(t){throw this.#isHydration=!1,t}this.#isHydration=!1}setVariantId(t){let e;if(t>0){const i=this.#data.product.variants.find((e=>e.id===t));if(!i)throw new Error(`[product-section] [The variant "${t}" is not found in the product data object]`);return e=this.#data.product.options.map(((t,e)=>({name:t,value:i.options[e]}))),this.#changeState({variantId:t,optionsValues:e})}return this.#changeState({variantId:0,optionsValues:this.#data.product.options.map((t=>({name:t,value:null})))})}setOptions(t){let e=!0;const i=this.#optionsValues.map((({name:i,value:s})=>{let a=i in t?t[i]:s;return null!=a&&""!==a||(a=null,e=!1),{name:i,value:a}}));if(!e)return this.#changeState({variantId:0,optionsValues:i});const s=this.#data.product.variants.find((t=>{for(let e=0;e<i.length;e++)if(i[e].value!==t.options[e])return!1;return!0})),a=s?s.id:null;return this.#changeState({variantId:a,optionsValues:i})}#changeState({variantId:t,optionsValues:e}){const s=t!==this.#variantId,a=e.reduce(((t,e,i)=>t||e.name!==this.#optionsValues[i]?.name||e.value!==this.#optionsValues[i]?.value),!1);this.#variantId=t,this.#optionsValues=e;const o=!(!a&&!this.#isHydration)&&this.#updateAvailability();(s||a||o)&&this.dispatchEvent(new CustomEvent(i,{detail:{isVariantChanged:s}}))}async#render(t){if(this.#abortController&&(this.#abortController.abort(),this.#abortController=void 0),this.#$variantInputs.forEach((t=>{t.value=this.#variantId||"",t.setAttribute("value",this.#variantId||"")})),this.#toggleLoadingClasses(!1),this.#showErrorMessages(!1),!t.detail.isVariantChanged||this.#isHydration)return;if(null===this.#variantId)return this.#$addToCartButtons.forEach((t=>{t.disabled=!0})),void this.querySelectorAll(`[${e.doesNotExistText}]`).forEach((t=>{const i=t.getAttribute(e.doesNotExistText);i&&(t.textContent=i)}));this.#data.section.updateURL&&window.history.replaceState({},"",`${this.#data.section.requestURL}${this.#data.section.requestURL.indexOf("?")>-1?"&":"?"}${this.#variantId>0?`variant=${this.#variantId}`:""}`);const i=`${this.#data.section.requestURL}${this.#data.section.requestURL.indexOf("?")>-1?"&":"?"}${this.#variantId>0?`variant=${this.#variantId}&`:""}section_id=${this.#data.section.sectionId}`;this.#abortController=new AbortController,this.#$addToCartButtons.forEach((t=>{t.disabled=!0})),this.#toggleLoadingClasses(!0);try{const t=await fetch(i,{signal:this.#abortController.signal});if(!t.ok)throw new Error(`[product-section] [Response error from the "${t.url}" URL]`);const e=await t.text();this.#changeHTML(e),this.#toggleLoadingClasses(!1)}catch(t){if("AbortError"!==t.name)throw this.#changeHTML(this.#latestHTML),this.#toggleLoadingClasses(!1),this.#showErrorMessages(!0),t}}#toggleLoadingClasses(t){((t,e,i)=>{t.querySelectorAll(`[${e}]`).forEach((t=>{const s=t.getAttribute(e);s&&(i?t.classList.add(s):t.classList.remove(s))}))})(this,e.loadingClass,t)}#showErrorMessages(t){this.querySelectorAll(`[${e.errorMessage}]`).forEach((e=>{e.hidden=!t}))}#changeHTML(t){const i=(new DOMParser).parseFromString(t,"text/html").querySelector("product-section"+(this.id?"#"+this.id:""));if(!i)throw new Error('[product-section] [The "product-section" element is not found]');this.#latestHTML=t,this.querySelector(`[${e.json}]`).innerHTML=i.querySelector(`[${e.json}]`).innerHTML;const s=Array.from(this.querySelectorAll(`[${e.area}]`)),a=Array.from(i.querySelectorAll(`[${e.area}]`));let o=!1;s.length!==a.length?(console.warn(`[product-section] [Previous "${e.area}" elements don't match the new received ones. The HTML of the component will be replaced completely.]`),this.innerHTML=i.innerHTML,i.querySelector("[data-shopify='payment-button']")&&(o=!0)):s.forEach(((t,i)=>{const s=a[i];let r="innerHTML";s.getAttribute(e.area)&&(r=s.getAttribute(e.area)),r.split(",").forEach((e=>{if("innerHTML"===(e=e.trim()))return t.innerHTML=s.innerHTML,void(s.querySelector("[data-shopify='payment-button']")&&(o=!0));s.hasAttribute(e)?t.setAttribute(e,s.getAttribute(e)):t.removeAttribute(e)}))})),o&&window.Shopify?.PaymentButton?.init(),this.#hydrate()}#updateAvailability(){const t={};this.#data.product.variants.forEach((e=>{for(let i=0;i<this.#optionsHierarchy.length;i++){const s=this.#optionsHierarchy[i],a=this.#data.product.options[s],o=e.options[s];a in t||(t[a]={});const r=t[a];if(r[o]||(r[o]=e.available),e.options[s]!==this.#optionsValues[s].value)break}}));const e=this.#optionsAvailability;this.#optionsAvailability=t;const i=Object.keys(t);if(i.length!==Object.keys(e).length)return!0;for(let s=0;s<i.length;s++){const a=i[s];if(!(a in e))return!0;const o=Object.keys(t[a]);if(o.length!==Object.keys(e[a]).length)return!0;for(let i=0;i<o.length;i++){const s=o[i];if(t[a][s]!==e[a][s])return!0}}return!1}get state(){return{variantId:this.#variantId,optionsValues:this.#optionsValues,optionsAvailability:this.#optionsAvailability}}}customElements.define(t,s)})();