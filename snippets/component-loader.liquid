{%- comment -%}WARNING --- DO NOT EDIT THE FOLLOWING LINES: AUTOGENERATED{%- endcomment -%}
<script>
  window.components = {
    'accordion-block': "{{ 'js-component-accordion-block.min.js' | asset_url }}",
    'country-province-selector': "{{ 'js-component-country-province-selector.min.js' | asset_url }}",
    'filter-and-sort-form': "{{ 'js-component-filter-and-sort-form.min.js' | asset_url }}",
    'filter-reset': "{{ 'js-component-filter-reset.min.js' | asset_url }}",
    'image-loader': "{{ 'js-component-image-loader.min.js' | asset_url }}",
    login: "{{ 'js-component-login.min.js' | asset_url }}",
    'modal-dialog': "{{ 'js-component-modal-dialog.min.js' | asset_url }}",
    'modal-opener': "{{ 'js-component-modal-opener.min.js' | asset_url }}",
    'page-viewer': "{{ 'js-component-page-viewer.min.js' | asset_url }}",
    'product-radio-option': "{{ 'js-component-product-radio-option.min.js' | asset_url }}",
    'product-section': "{{ 'js-component-product-section.min.js' | asset_url }}",
    'quantity-input': "{{ 'js-component-quantity-input.min.js' | asset_url }}",
  };
</script>
{%- comment -%}ENDWARNING ---{%- endcomment -%}

<script type="text/javascript">
  const components = window.components || {};

  class ComponentLoader extends HTMLElement {
    constructor() {
      super();
      Object.keys(components).forEach((component) => {
        if (this.querySelector(component)) {
          this.injectScript(components[component], component);
          delete components[component];
        }
      });
    }
    injectScript(src, element) {
      const elScript = document.createElement('script');
      elScript.type = 'module';
      elScript.src = src;
      document.body.appendChild(elScript);
      elScript.addEventListener('error', () =>
        document.querySelectorAll(element).forEach((el) => el.classList.add('no-js'))
      );
      elScript.addEventListener('load', () => {
        document.dispatchEvent(
          new CustomEvent('component-loaded', {
            detail: {
              component: element,
              components,
            },
          })
        );
      });
    }
  }
  customElements.define('component-loader', ComponentLoader);
</script>
